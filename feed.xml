<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://csmsum.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://csmsum.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-10-06T22:07:47+00:00</updated><id>https://csmsum.github.io/feed.xml</id><title type="html">blank</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design. </subtitle><entry><title type="html">SVM and Kernel Method</title><link href="https://csmsum.github.io/blog/2024/kernel-method/" rel="alternate" type="text/html" title="SVM and Kernel Method"/><published>2024-10-05T15:12:00+00:00</published><updated>2024-10-05T15:12:00+00:00</updated><id>https://csmsum.github.io/blog/2024/kernel-method</id><content type="html" xml:base="https://csmsum.github.io/blog/2024/kernel-method/"><![CDATA[<h1 id="kernel-based-learning">Kernel Based Learning</h1> <p>This post deals with kernel based learning that are largely used nowadays in many neural network models, starting from maximal margin classifier through support vector classifier/machine to how they are employed in feature maps in neural networks.</p> <h2 id="support-vector-machine-review">Support Vector Machine Review</h2> <p>Support vector machine (SVM) was developed in 1990s. It is originally from ‘maximal margin classifier’, which was further developed into ‘support vector classifier’, leading to SVM.</p> <h3 id="separating-hyperplane-maximal-margin-classifier">Separating Hyperplane (Maximal Margin Classifier)</h3> <p>Suppose a ( p )-dimensional space, a hyperplane is a flat affine subspace of dimension ( p-1 ).</p> <p>For example, in two dimensions, a hyperplane is defined by the equation \(\beta_0 + \beta_1X_1 + \beta_2X_2 = 0\) Without loss of generality(WLOG), we can extend to the $p$-dimensional setting: \(\beta_0 + \beta_1X_1 + \beta_2X_2 + \cdots + \beta_nX_n = 0\)</p> <p>Suppose there exists a point $ x_i \in \mathbb{R}^p $ , i.e. $ x_i = (x_1, x_2, \cdots, x_n) $ then the hyperplane divides the $p$-dimensional space into two halves s.t.</p> \[\begin{aligned} \text{(1) : } \beta_0 + \beta_1x_1 + \beta_2x_2 + \cdots + \beta_nx_n &gt; 0 \\\ \text{(2) : } \beta_0 + \beta_1x_1 + \beta_2x_2 + \cdots + \beta_nx_n &lt; 0 \end{aligned}\] <p>Based on the location of subspace, if we classify (1) as $y_i =1$ and (2) as $y_i=-1$, we may say that:</p> \[y_i(\beta_0 + \beta_1x_1 + \beta_2x_2 + \cdots + \beta_nx_n) &gt; 0, \forall x\in\mathbb{R}^p\] <h3 id="how-to-decide-classifier-with-lagrange-multiplier">How to decide classifier with Lagrange Multiplier</h3> <p>Alright, now let’s say that we have an observation $x^\ast$ Also, let $f(x^\ast)=\beta_0 + \beta_1x^\ast_1 + \beta_2x^\ast_2 + \cdots + \beta_nx^\ast_n$. Then we can assign $x^\ast$ into class 1 or to class -1. That is, \(\hat{y}^\ast = \text{sign}f(x^\ast)\)</p> <p>You may easily think that if the magnitude of $f(x^\ast)$ is far from 0, then $x^\ast$ lies far from the hyperplane, and otherwise $x^\ast$ lies right beside of the (separating) hyperplane.</p> <p>The smallest distance from such $x^\ast$ from the hyperplane is called ‘margin’, so the choice of $f(x^\ast)$ maximizing the margin is called ‘maximal margin classifier’.</p> <p>Maximal margin classifier is at last decided by only a handful of data that are close to the hyperplane but not others, and we say that the data ‘support’ the maximal margin hyperplane.</p> <p>So what we basically want here is to maximize $f(x^\ast)$, but we need to be cautious of the choices of $\beta$s because $\lbrace\beta\rbrace_n=\lbrace1,1, \cdots ,1\rbrace$ is equivalent to $\lbrace\beta\rbrace_n = \lbrace2,2,\cdots,2\rbrace$, as they do not affect the sign of $f(x^\ast)$ but only the magnitude. So we constrain $\beta \text{ s.t.} \sum_{j=1}^n\beta_j^{2}=1$. That is,</p> \[\begin{aligned} &amp;\max_{\beta_0, \cdots, \beta_p}M \\ &amp;\text{subject to } \sum_{j=1}^n\beta_j^{2}=1 \\ &amp;\text{and } y_i(\beta_0 + \beta_1x^\ast_{i1} + \beta_2x^\ast_{i2} + \cdots + \beta_px^\ast_{ip}) \geq M \\ \end{aligned}\] <p>Let $\textbf{w} = \frac{1}{M}(\beta_1, \cdots \beta_p)^T$ and $b=\frac{\beta_0}{M}$. Then since $\bf{w^Tw}=\frac{1}{M^2}$ , it suffices to</p> \[\begin{aligned} &amp;\min_{\mathbf{w}, b}\frac{1}{2}\mathbf{w^T w} \\ &amp;\text{subject to } 1-y_i(\mathbf{w^T x} + b) \leq 0, \forall i = 1,\cdots,n \end{aligned}\] <p>for all data point $\lbrace x_i \rbrace _{i=1}^n$. To minimize the Lagrangian Function $\mathcal{L}$ :</p> \[\begin{aligned} \mathcal{L} = \frac{1}{2}\mathbf{w^T w} + \sum_{i=1}^{n}\alpha_i(1-y_i(\mathbf{w^T x_i} + b)) \\ \alpha_i \geq 0, \forall i = 1,\cdots,n \end{aligned}\] \[\begin{aligned} &amp;\frac{\partial\mathcal{L}}{\partial\mathbf{w}} = \mathbf{w} +\sum_{i=1}^{n}\alpha_i(-y_i)(\mathbf{x_i}) =0 \implies \mathbf{w} = \sum_{i=1}^{n}\alpha_i y_i \mathbf{x}_i\\ &amp;\frac{\partial}{\partial b} = \sum_{i=1}^{n} \alpha_iy_i = 0 \end{aligned}\] <p>From the above equation, you may see that $\mathbf{w} = \sum_{i=1}^{n}\alpha_i y_i \mathbf{x}_i$. Let’s substitute this $\mathbf{w}$ back to the $\mathcal{L}$. Then the Lagrangian</p> \[\begin{aligned} \mathcal{L} = -\frac{1}{2}\sum_{i=1}^{n}\sum_{j=1}^{n}\alpha_i\alpha_jy_iy_j\mathbf{x}^T\mathbf{x} + \sum_{i=1}^{n} \alpha_i \\ \text{subject to } \sum_{i=1}^n\alpha_i y_i = 0, \forall i = 1, \cdots, n \end{aligned}\] <p>However, the maximal margin classifier does not exists if the data overlaps. If an extraordinary point exists in the other side of the data, we cannot find a classifer since it does not exists. Instead, we can give some margin to the maximal margin classifier, and we say them ‘support vector classifier’.</p> <h3 id="support-vector-classifier">Support Vector Classifier</h3> <p>To be updated</p> <h3 id="support-vector-machine">Support Vector Machine</h3> <p>To be updated</p> <h2 id="what-is-kernel-based-leraning">What is kernel based leraning?</h2> <p>To be updated</p> <h3 id="acknowledges">Acknowledges</h3> <p>I would like to express my sincere gratitude to Professor <a href="https://sites.google.com/view/wonkukkim/home">Wonkuk Kim</a> at Chung-Ang University, as this post is largely based on insights gained from his Data Mining class.</p>]]></content><author><name></name></author><category term="kernel"/><category term="method"/><category term="Kernel"/><category term="Method"/><summary type="html"><![CDATA[Kernel Method explained with SVM.]]></summary></entry><entry><title type="html">Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra</title><link href="https://csmsum.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/" rel="alternate" type="text/html" title="Google Gemini updates: Flash 1.5, Gemma 2 and Project Astra"/><published>2024-05-14T00:00:00+00:00</published><updated>2024-05-14T00:00:00+00:00</updated><id>https://csmsum.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra</id><content type="html" xml:base="https://csmsum.github.io/blog/2024/google-gemini-updates-flash-15-gemma-2-and-project-astra/"><![CDATA[]]></content><author><name></name></author><summary type="html"><![CDATA[We’re sharing updates across our Gemini family of models and a glimpse of Project Astra, our vision for the future of AI assistants.]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://csmsum.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://csmsum.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://csmsum.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>